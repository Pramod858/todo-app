version: 0.2

env:
  parameter-store:
    DOCKER_REGISTRY_USERNAME: /app/docker_credentials/username
    DOCKER_REGISTRY_PASSWORD: /app/docker_credentials/password
    DOCKER_REGISTRY_URL: /app/docker_credentials/url

  secrets-manager:
    LOGIN: local:sonartoken
    HOST: local:HOST
    Organization: local:Organization
    Project: local:Project

phases:
  pre_build:
    commands:
      - echo "Pre-build phase..."
      - apt-get update
      - apt-get install -y jq
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.0.0.4432-linux.zip
      - echo "Unzipping Sonar Scanner..."
      - unzip sonar-scanner-cli-6.0.0.4432-linux.zip -d /tmp/
      - export SONAR_SCANNER_HOME=/tmp/sonar-scanner-6.0.0.4432-linux
      - export PATH=$PATH:$SONAR_SCANNER_HOME/bin
      - echo "Sonar Scanner installed successfully"
      - $SONAR_SCANNER_HOME/bin/sonar-scanner --version

  build:
    commands:
      - echo "Build phase ..."
      - echo "Starting SonarQube scan..."
      - $SONAR_SCANNER_HOME/bin/sonar-scanner -Dsonar.login="$LOGIN" -Dsonar.host.url="$HOST" -Dsonar.projectKey="$Project" -Dsonar.organization="$Organization" || exit 1
      - echo "SonarQube scan completed"
      - sleep 5
      - echo "Checking SonarQube quality gate status..."
      - curl "https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project" -o result.json
      - cat result.json
      - if [ "$(jq -r '.projectStatus.status' result.json)" == "ERROR" ]; then
          echo "Quality gate failed! Aborting build.";
          exit 1;
        fi
      - echo "Quality gate passed"
      - echo "Building Docker image..."
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL"
      - docker build -t "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/todo-app:latest" .
      - docker push "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/todo-app:latest"
      - echo "Docker image pushed to registry successfully"

  post_build:
    commands:
      - echo "Build completed successfully!"

artifacts:
  files:
    - '**/*'
