version: 0.2

env:
  secrets-manager:
    LOGIN: local:SonarToken
    HOST: local:HOST
    Organization: local:Organization
    Project: local:Project

phases:
  install:
    commands:
      - echo "===== [Pre-build Phase] Installing Dependencies ====="
      - apt-get update
      - apt-get install -y jq
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.0.0.4432-linux.zip
      - echo "Unzipping Sonar Scanner..."
      - unzip sonar-scanner-cli-6.0.0.4432-linux.zip -d /tmp/
      - export SONAR_SCANNER_HOME=/tmp/sonar-scanner-6.0.0.4432-linux
      - export PATH=$PATH:$SONAR_SCANNER_HOME/bin
      - echo "Sonar Scanner installed successfully."
      - $SONAR_SCANNER_HOME/bin/sonar-scanner --version

  pre_build:
    commands:
      - echo "===== [Pre-build Phase] Starting SonarQube Scan ====="
      - echo "Scanning project with SonarQube..."
      - $SONAR_SCANNER_HOME/bin/sonar-scanner -Dsonar.login="$LOGIN" -Dsonar.host.url="$HOST" -Dsonar.projectKey="$Project" -Dsonar.organization="$Organization" || exit 1

      - echo "SonarQube scan completed successfully."
      - sleep 5
      - echo "Checking SonarQube Quality Gate status..."
      - curl "https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project" -o result.json
      - cat result.json

      # Check quality gate result
      - if [ "$(jq -r '.projectStatus.status' result.json)" == "ERROR" ]; then
          echo "Quality Gate failed! Aborting build.";
          exit 1;
        else
          echo "Quality Gate passed!";
        fi

  build:
    commands:
      - echo "===== [Build Phase] Logging in to Amazon ECR ====="
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      
      - echo "===== [Build Phase] Building Docker Image ====="
      - echo "Build started on $(date)"
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo "Docker image built and tagged successfully."

  post_build:
    commands:
      - echo "===== [Post-build Phase] Pushing Docker Image to ECR ====="
      - echo "Pushing Docker image..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo "Docker image pushed successfully."
      - echo "Build completed on $(date)"

artifacts:
  files:
    - "**/*"
  name: builds/$CODEBUILD_BUILD_NUMBER/my-artifacts
